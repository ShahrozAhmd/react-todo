{"version":3,"sources":["UI/Modal/modal.module.css","Components/TasksContainer/taskContainer.module.css","Components/TasksContainer/TaskItem/taskItem.module.css","Components/AddTaskBar/addTaskBar.module.css","Components/ActionButtons/actionButton.module.css","UI/Backdrop/backdrop.module.css","Containers/App.module.css","Components/AddTaskBar/addTaskBar.js","Components/ActionButtons/actionButton.js","Components/Date/date.js","Components/TasksContainer/TaskItem/taskItem.js","Components/TasksContainer/taskContainer.js","UI/Modal/modal.js","UI/Backdrop/backdrop.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","AddTaskBar","props","className","classes","Container","type","InputBox","onChange","btnstate","AddTaskBtn","onClick","addTask","disabled","disbtn","icon","faPlusSquare","style","marginRight","ActionButton","ButtonContainer","theedit","taskInd","faPencilAlt","ButtonItem","size","thedel","faTimes","DateToday","month","date","Date","getMonth","getDate","finalDate","TaskItem","atask","map","value","index","Table","key","Sno","Task","Action","adel","aedit","TaskContainer","container","tasks","delete","edit","Modal","modal","EditBox","prioError","Error","ErrorText","emptyInpError","width","id","PositionInput","min","max","arrayLimit","TaskInput","FinishButton","finishEdit","Backdrop","remove","backdropToggle","NoBackdrop","editDone","priorityError","emptyInputError","limit","App","state","isBtnDisable","isBackdropEnable","taskToEdit","modalErrors","emptyInputs","emptyInputBox","document","querySelector","changeBtnState","e","target","trim","setState","addTaskHandler","val","copyState","push","removeBackdrop","e2","editTaskHandler","i","currState","setTimeout","getElementById","assignEditedTask","currTasksStates","currIndex","position","positionValue","taskValue","length","e1","splice","deleteTaskHandler","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4dd44e02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"modal_Container__NMX_s\",\"EditBox\":\"modal_EditBox__3fnDW\",\"PositionInput\":\"modal_PositionInput__1m2Fb\",\"TaskInput\":\"modal_TaskInput__1Cfcp\",\"FinishButton\":\"modal_FinishButton__n-9Aw\",\"Error\":\"modal_Error__1tcES\",\"ErrorText\":\"modal_ErrorText__2lL-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"taskContainer_container__1P-fG\",\"Table\":\"taskContainer_Table__1snMX\",\"Date\":\"taskContainer_Date__1-2u5\",\"Task\":\"taskContainer_Task__2J-aE\",\"Sno\":\"taskContainer_Sno__1fKas\",\"Action\":\"taskContainer_Action__1HdkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"taskItem_Table__1IkeW\",\"Date\":\"taskItem_Date__iWqp6\",\"Task\":\"taskItem_Task__3MP2V\",\"Sno\":\"taskItem_Sno__38bSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"addTaskBar_Container__3Z0Wj\",\"InputBox\":\"addTaskBar_InputBox__3lgTO\",\"AddTaskBtn\":\"addTaskBar_AddTaskBtn__39X_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonItem\":\"actionButton_ButtonItem__18un_\",\"ButtonContainer\":\"actionButton_ButtonContainer__t7-kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__2TFnL\",\"NoBackdrop\":\"backdrop_NoBackdrop__nS9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__lXaJu\"};","import React from \"react\";\r\n// get our fontawesome imports\r\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport classes from \"./addTaskBar.module.css\";\r\n\r\nfunction AddTaskBar(props) {\r\n  return (\r\n    <div className={classes.Container}>\r\n      <input\r\n        type=\"text\"\r\n        className={classes.InputBox}\r\n        onChange={props.btnstate}\r\n      />\r\n      <button\r\n        className={classes.AddTaskBtn}\r\n        onClick={props.addTask}\r\n        disabled={props.disbtn}\r\n      >\r\n        <FontAwesomeIcon icon={faPlusSquare} style={{ marginRight: \"5px\" }} />\r\n        Add Task\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTaskBar;\r\n","import React from \"react\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport classes from \"./actionButton.module.css\";\r\n\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <div className = {classes.ButtonContainer}>\r\n      <button onClick = {() =>{props.theedit(props.taskInd)}}>\r\n        <FontAwesomeIcon\r\n          icon={faPencilAlt}\r\n          className={classes.ButtonItem}\r\n          size=\"lg\"\r\n        />\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => {\r\n          props.thedel(props.taskInd);\r\n        }}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          className={classes.ButtonItem}\r\n          size=\"lg\"\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from \"react\";\r\n\r\nconst DateToday = () => {\r\n  var date = new Date();\r\n  var month = date.getMonth();\r\n  var monthArr = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  var date = date.getDate();\r\n  var finalDate = `${monthArr[month]},${date}`;\r\n\r\n  return <>{finalDate}</>;\r\n};\r\n\r\nexport default DateToday;\r\n","import React from \"react\";\r\nimport classes from \"./taskItem.module.css\";\r\nimport ActionButton from \"../../ActionButtons/actionButton\";\r\nimport Date from \"../../Date/date\";\r\n\r\nexport default function TaskItem(props) {\r\n  return props.atask.map((value, index) => {\r\n    return (\r\n      <tr className={classes.Table} key={index}>\r\n        <td className={classes.Sno}>{index + 1}.</td>\r\n        <td className={classes.Task}>{props.atask[index]}</td>\r\n        <td className={classes.Date}>\r\n          <Date />\r\n        </td>\r\n        <td className={classes.Action}>\r\n          <ActionButton\r\n            taskInd={index}\r\n            thedel={props.adel}\r\n            theedit = {props.aedit}\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./taskContainer.module.css\";\r\nimport TaskItem from \"./TaskItem/taskItem\";\r\n\r\nexport default function TaskContainer(props) {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr className={classes.Table}>\r\n              <th className={classes.Sno}>Sno</th>\r\n              <th className={classes.Task}>Task</th>\r\n              <th className={classes.Date}>Date</th>\r\n              <th className={classes.Action}>Action</th>\r\n            </tr>\r\n            {/* here I have to run .map to print rows as per data */}\r\n            <TaskItem\r\n              atask={props.tasks}\r\n              adel={props.delete}\r\n              aedit = {props.edit}\r\n            />\r\n            {/* <TaskItem />\r\n          <TaskItem /> */}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./modal.module.css\";\r\n\r\nexport default function Modal(props) {\r\n  return props.modal ? (\r\n    <div className={classes.Container}>\r\n      <div className={classes.EditBox}>\r\n        {props.prioError ? (\r\n          <div className={classes.Error}>\r\n            Error <br />\r\n            <p className={classes.ErrorText}>(No of Priority Exceed)</p>\r\n          </div>\r\n        ) : null}\r\n\r\n        {props.emptyInpError? (\r\n          <div className={classes.Error}>\r\n            Error <br />\r\n            <p className={classes.ErrorText}>(Empty Inputs)</p>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div style={{ width: \"60%\" }}>\r\n          Priority\r\n          <input\r\n            id=\"position-input\"\r\n            className={classes.PositionInput}\r\n            type=\"number\"\r\n            min=\"1\"\r\n            max={props.arrayLimit}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ width: \"60%\" }}>\r\n          Task\r\n          <input id=\"task-input\" className={classes.TaskInput} type=\"text\" />\r\n        </div>\r\n        <div style={{ width: \"60%\" }}>\r\n          <button className={classes.FinishButton} onClick={props.finishEdit}>\r\n            Finish\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./backdrop.module.css\";\r\nimport Modal from \"../Modal/modal\";\r\n\r\nexport default function Backdrop(props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        onClick={props.remove}\r\n        className={props.backdropToggle ? classes.Backdrop : classes.NoBackdrop}\r\n      ></div>\r\n      <Modal\r\n        modal={props.backdropToggle}\r\n        finishEdit={props.editDone}\r\n        prioError={props.priorityError}\r\n        emptyInpError = {props.emptyInputError}\r\n        arrayLimit={props.limit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./App.module.css\";\r\nimport AddTaskBar from \"../Components/AddTaskBar/addTaskBar\";\r\nimport TaskContainer from \"../Components/TasksContainer/taskContainer\";\r\nimport Backdrop from \"../UI/Backdrop/backdrop\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    tasks: [],\r\n    isBtnDisable: true,\r\n    isBackdropEnable: false,\r\n    taskToEdit: 0,\r\n    modalErrors: {\r\n      priorityError: false,\r\n      emptyInputs: false,\r\n    },\r\n  };\r\n\r\n  //just a utility function to clear the input field\r\n  emptyInputBox = () => {\r\n    document.querySelector(\"input\").value = \"\";\r\n  };\r\n\r\n  changeBtnState = (e) => {\r\n    if (e.target.value.trim()) {\r\n      this.setState({ isBtnDisable: false });\r\n    }\r\n  };\r\n\r\n  addTaskHandler = () => {\r\n    const val = document.querySelector(\"input\").value;\r\n    const copyState = [...this.state.tasks];\r\n    copyState.push(val);\r\n\r\n    this.setState({\r\n      tasks: copyState,\r\n      isBtnDisable: true,\r\n    });\r\n\r\n    this.emptyInputBox();\r\n  };\r\n\r\n  //to disble edit screen by clicking backdrop\r\n  removeBackdrop = () => {\r\n    let e2 = { ...this.state.modalErrors };\r\n    e2.emptyInputs = false;\r\n    e2. priorityError = false;\r\n\r\n\r\n    this.setState({\r\n      isBackdropEnable: false,\r\n      modalErrors: e2\r\n    });\r\n  };\r\n\r\n  editTaskHandler = (i) => {\r\n    this.setState({ isBackdropEnable: true, taskToEdit: i });\r\n    let currState = [...this.state.tasks];\r\n\r\n    setTimeout(() => {\r\n      var position = document.getElementById(\"position-input\");\r\n      position.value = i + 1;\r\n\r\n      var task = document.getElementById(\"task-input\");\r\n      task.value = currState[i];\r\n    }, 10);\r\n  };\r\n\r\n  assignEditedTask = () => {\r\n    let currTasksStates = [...this.state.tasks];\r\n    let currIndex = this.state.taskToEdit;\r\n    let position = document.getElementById(\"position-input\");\r\n    let positionValue = position.value - 1;\r\n    let task = document.getElementById(\"task-input\");\r\n    let taskValue = task.value;\r\n\r\n    if (!position.value.trim() || !taskValue.trim()) {\r\n      //use this logic to update nested state using setState, coz setState not suport tradional js way.\r\n      var e2 = { ...this.state.modalErrors };\r\n      e2.emptyInputs = true;\r\n      this.setState({ modalErrors: e2 });\r\n    } else if (position.value > currTasksStates.length) {\r\n      var e1 = { ...this.state.modalErrors };\r\n      e1.priorityError = true;\r\n      this.setState({ modalErrors: e1 });\r\n    } else {\r\n      currTasksStates.splice(currIndex, 1);\r\n      currTasksStates.splice(positionValue, 0, taskValue);\r\n\r\n      //finally update state after all checks and modification\r\n      this.setState({\r\n        tasks: currTasksStates,\r\n        isBackdropEnable: false,\r\n        modalErrors: !e2,\r\n        modalErrors: !e1,\r\n      });\r\n    }\r\n  };\r\n\r\n  //For deleting any task from the list\r\n  deleteTaskHandler = (i) => {\r\n    const copyState = [...this.state.tasks];\r\n    copyState.splice(i, 1);\r\n    this.setState({ tasks: copyState });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Container}>\r\n        <Backdrop\r\n          backdropToggle={this.state.isBackdropEnable}\r\n          remove={this.removeBackdrop}\r\n          editDone={this.assignEditedTask}\r\n          priorityError={this.state.modalErrors.priorityError}\r\n          emptyInputError={this.state.modalErrors.emptyInputs}\r\n          limit={this.state.tasks.length}\r\n        />\r\n        <AddTaskBar\r\n          addTask={this.addTaskHandler}\r\n          disbtn={this.state.isBtnDisable}\r\n          btnstate={this.changeBtnState}\r\n        />\r\n        <TaskContainer\r\n          tasks={this.state.tasks}\r\n          delete={this.deleteTaskHandler}\r\n          edit={this.editTaskHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}